{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","tournamentsCtrl","tournaments","getTournaments","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","email","name","register","post","login","logout","removeItem","service","get","headers","Authorization","loginCtrl","credentials","password","onSubmit","err","alert","then","registerCtrl","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute', 'ui.bootstrap']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/tournaments', {\n        templateUrl: '/tournaments/tournaments.view.html',\n        controller: 'tournamentsCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('tournamentsCtrl', tournamentsCtrl);\n\n  tournamentsCtrl.$inject = ['$location', 'tournaments'];\n  function tournamentsCtrl($location, tournaments) {\n    var vm = this;\n\n    vm.tournaments = {}\n\n    tournaments.getTournaments()\n    .success(function(data) {\n    \tconsole.log(\"Data\" + data);\n        vm.tournaments = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('tournaments', tournaments);\n\n  tournaments.$inject = ['$http'];\n  function tournaments($http) {\n\n    var getTournaments = function () {\n      return $http.get('/api/tournaments');\n    };\n\n    return {\n      getTournaments : getTournaments\n    };\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}