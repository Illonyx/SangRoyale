{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","aboutCtrl","console","log","homeCtrl","loyaltyCtrl","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","tournamentsCtrl","tournaments","getTournaments","loginCtrl","credentials","email","password","onSubmit","login","err","alert","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute', 'ui.bootstrap']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/about', {\n        templateUrl: '/about/about.view.html',\n        controller: 'tournamentsCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/tournaments', {\n        templateUrl: '/tournaments/tournaments.view.html',\n        controller: 'tournamentsCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/loyalty', {\n        templateUrl: '/loyalty/loyalty.view.html',\n        controller: 'loyaltyCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/other/guides', {\n        templateUrl: '/other/other.guides.view.html'\n      })\n      .when('/other/media', {\n        templateUrl: '/other/other.media.view.html'\n      })\n      .when('/other/updatelog', {\n        templateUrl: '/other/other.update-app-log.view.html'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('aboutCtrl', aboutCtrl);\n\n    //Sera à remplir ultérieurement\n    function aboutCtrl () {\n      console.log('About controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('loyaltyCtrl', loyaltyCtrl);\n\n    //Sera à remplir ultérieurement\n    function loyaltyCtrl () {\n      console.log('Loyalty controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('tournamentsCtrl', tournamentsCtrl);\n\n  tournamentsCtrl.$inject = ['$location', 'tournaments'];\n  function tournamentsCtrl($location, tournaments) {\n    var vm = this;\n\n    vm.tournaments = {}\n\n    tournaments.getTournaments()\n    .success(function(data) {\n    \tconsole.log(\"Data\" + data);\n        vm.tournaments = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('tournaments', tournaments);\n\n  tournaments.$inject = ['$http'];\n  function tournaments($http) {\n\n    var getTournaments = function () {\n      return $http.get('/api/tournaments');\n    };\n\n    return {\n      getTournaments : getTournaments\n    };\n  }\n\n})();\n\n/* A refactoriser\n\n//------------------------------------------------------------------------------\n  // Get challonge tournament result for a user\n  //------------------------------------------------------------------------------\n\n  //--Conversion en service à priori-- dependra d'un User setté dans une factory\n  function getTournamentsResultsForUser(tournamentResultsService){\n    \n    var scope = this;\n    var user={name:'Skyice',challonge_username:'Skyice7', challongeId:''};\n    var tournamentsPlayerResults = new Array();\n\n    //L'utilisateur a participé?\n    var tournamentResults = tournamentResultsService.getTournamentResults();\n\n    for(var tournamentIndex = 0; tournamentIndex<tournamentResults.length;tournamentIndex++){\n      var tournamentResult = tournamentResults[tournamentIndex].tournament;\n      var participants = tournamentResult.participants;\n      var userTournamentId = findUserTournamentId(user, participants);\n\n      if(userTournamentId != null){\n        tournamentResult[\"isParticipant\"] = true;\n        var userInfo = findUserInfo(userTournamentId, participants);\n        var userMatches = findUserMatches(userTournamentId, tournamentResult.matches);\n\n        //Fill found matches with participant data\n        for(var i=0;i<userMatches.length;i++){\n          if(userTournamentId != userMatches[i].player1_id){\n            var opponentInfo = findUserInfo(userMatches[i].player1_id, participants);\n            userMatches[i][\"username\"] = userInfo;\n            userMatches[i][\"opponent\"] = opponentInfo;\n          } else if(userTournamentId != userMatches[i].player2_id){\n            var opponentInfo = findUserInfo(userMatches[i].player2_id, participants);\n            userMatches[i][\"username\"] = userInfo;\n            userMatches[i][\"opponent\"] = opponentInfo;\n          } else {\n            console.log('Problem?');\n          }\n        }\n        tournamentResult[\"userMatches\"] = userMatches;\n      }\n      else{\n        tournamentResult[\"isParticipant\"] = false;\n        tournamentResult[\"userMatches\"] = new Array();\n      }\n    }\n\n    var tournamentsResultsForUser = filterObjectTableWithKeys(tournamentResults, \"tournament\", [\"id\", \"name\", \"url\", \"tournament_type\", \"completed_at\", \"full_challonge_url\", \"participants_count\", \"userMatches\", \"isParticipant\"]);\n    console.log('fff' + JSON.stringify(tournamentsResultsForUser));\n    this.tournamentsResultsForUser = tournamentsResultsForUser;\n  };\n\n  */\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}