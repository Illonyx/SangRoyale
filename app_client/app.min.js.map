{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","aboutCtrl","about","vm","this","getTopic","success","data","console","log","lasteditiondate","claninfo","generalinfo","error","e","$inject","homeCtrl","loyaltyCtrl","profileCtrl","meanData","user","getProfile","tournamentsCtrl","tournaments","getTournaments","loginCtrl","credentials","email","password","onSubmit","login","err","alert","then","registerCtrl","name","register","$http","get","service","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","headers","Authorization","calendarCtrl","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('sangRoyaleApp', ['ngRoute', 'ui.bootstrap', 'ui.calendar']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/about', {\n        templateUrl: '/about/about.view.html',\n        controller: 'aboutCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/tournaments', {\n        templateUrl: '/tournaments/tournaments.view.html',\n        controller: 'tournamentsCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/tournamentsplanning', {\n        templateUrl: '/tournaments/tournaments-planning.view.html',\n        controller: 'calendarCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/loyalty', {\n        templateUrl: '/loyalty/loyalty.view.html',\n        controller: 'loyaltyCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/other/guides', {\n        templateUrl: '/other/other.guides.view.html'\n      })\n      .when('/other/media', {\n        templateUrl: '/other/other.media.view.html'\n      })\n      .when('/other/updatelog', {\n        templateUrl: '/other/other.update-app-log.view.html'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('sangRoyaleApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function () {\n\n  angular\n  .module('sangRoyaleApp')\n  .controller('aboutCtrl', aboutCtrl);\n\n  aboutCtrl.$inject = ['$location', 'about'];\n  function aboutCtrl($location, about) {\n    var vm = this;\n\n    about.getTopic()\n    .success(function(data) {\n    \tconsole.log(\"Data\" + data);\n        vm.lasteditiondate = data.lasteditiondate;\n        vm.claninfo = data.claninfo;\n        vm.generalinfo = data.generalinfo;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function() {\n  \n  angular\n    .module('sangRoyaleApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('sangRoyaleApp')\n    .controller('loyaltyCtrl', loyaltyCtrl);\n\n    //Sera à remplir ultérieurement\n    function loyaltyCtrl () {\n      console.log('Loyalty controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('sangRoyaleApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('sangRoyaleApp')\n  .controller('tournamentsCtrl', tournamentsCtrl);\n\n  tournamentsCtrl.$inject = ['$location', 'tournaments'];\n  function tournamentsCtrl($location, tournaments) {\n    var vm = this;\n\n    vm.tournaments = {}\n\n    tournaments.getTournaments()\n    .success(function(data) {\n    \tconsole.log(\"Data\" + data);\n        vm.tournaments = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('sangRoyaleApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('sangRoyaleApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function() {\n\n  angular\n    .module('sangRoyaleApp')\n    .service('about', about);\n\n  about.$inject = ['$http'];\n  function about($http) {\n\n    var getTopic = function () {\n      return $http.get('/api/about');\n    };\n\n    return {\n      getTopic : getTopic\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('sangRoyaleApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('sangRoyaleApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('sangRoyaleApp')\n    .service('tournaments', tournaments);\n\n  tournaments.$inject = ['$http'];\n  function tournaments($http) {\n\n    var getTournaments = function () {\n      return $http.get('/api/tournaments');\n    };\n\n    return {\n      getTournaments : getTournaments\n    };\n  }\n\n})();\n\n/* A refactoriser\n\n//------------------------------------------------------------------------------\n  // Get challonge tournament result for a user\n  //------------------------------------------------------------------------------\n\n  //--Conversion en service à priori-- dependra d'un User setté dans une factory\n  function getTournamentsResultsForUser(tournamentResultsService){\n    \n    var scope = this;\n    var user={name:'Skyice',challonge_username:'Skyice7', challongeId:''};\n    var tournamentsPlayerResults = new Array();\n\n    //L'utilisateur a participé?\n    var tournamentResults = tournamentResultsService.getTournamentResults();\n\n    for(var tournamentIndex = 0; tournamentIndex<tournamentResults.length;tournamentIndex++){\n      var tournamentResult = tournamentResults[tournamentIndex].tournament;\n      var participants = tournamentResult.participants;\n      var userTournamentId = findUserTournamentId(user, participants);\n\n      if(userTournamentId != null){\n        tournamentResult[\"isParticipant\"] = true;\n        var userInfo = findUserInfo(userTournamentId, participants);\n        var userMatches = findUserMatches(userTournamentId, tournamentResult.matches);\n\n        //Fill found matches with participant data\n        for(var i=0;i<userMatches.length;i++){\n          if(userTournamentId != userMatches[i].player1_id){\n            var opponentInfo = findUserInfo(userMatches[i].player1_id, participants);\n            userMatches[i][\"username\"] = userInfo;\n            userMatches[i][\"opponent\"] = opponentInfo;\n          } else if(userTournamentId != userMatches[i].player2_id){\n            var opponentInfo = findUserInfo(userMatches[i].player2_id, participants);\n            userMatches[i][\"username\"] = userInfo;\n            userMatches[i][\"opponent\"] = opponentInfo;\n          } else {\n            console.log('Problem?');\n          }\n        }\n        tournamentResult[\"userMatches\"] = userMatches;\n      }\n      else{\n        tournamentResult[\"isParticipant\"] = false;\n        tournamentResult[\"userMatches\"] = new Array();\n      }\n    }\n\n    var tournamentsResultsForUser = filterObjectTableWithKeys(tournamentResults, \"tournament\", [\"id\", \"name\", \"url\", \"tournament_type\", \"completed_at\", \"full_challonge_url\", \"participants_count\", \"userMatches\", \"isParticipant\"]);\n    console.log('fff' + JSON.stringify(tournamentsResultsForUser));\n    this.tournamentsResultsForUser = tournamentsResultsForUser;\n  };\n\n  */\n(function () {\n\nangular\n.module('sangRoyaleApp')\n.controller('calendarCtrl', calendarCtrl);\n\nfunction calendarCtrl() {\n  var vm=this;\n  \n}\n\n/*\nfunction calendarCtrl($scope,$compile,uiCalendarConfig) {\n    var date = new Date();\n    var d = date.getDate();\n    var m = date.getMonth();\n    var y = date.getFullYear();\n    \n    $scope.changeTo = 'Hungarian';\n    // event source that pulls from google.com\n    $scope.eventSource = {\n            url: \"http://www.google.com/calendar/feeds/usa__en%40holiday.calendar.google.com/public/basic\",\n            className: 'gcal-event',           // an option!\n            currentTimezone: 'America/Chicago' // an option!\n    };\n    // event source that contains custom events on the scope\n    $scope.events = [\n      {title: 'All Day Event',start: new Date(y, m, 1)},\n      {title: 'Long Event',start: new Date(y, m, d - 5),end: new Date(y, m, d - 2)},\n      {id: 999,title: 'Repeating Event',start: new Date(y, m, d - 3, 16, 0),allDay: false},\n      {id: 999,title: 'Repeating Event',start: new Date(y, m, d + 4, 16, 0),allDay: false},\n      {title: 'Birthday Party',start: new Date(y, m, d + 1, 19, 0),end: new Date(y, m, d + 1, 22, 30),allDay: false},\n      {title: 'Click for Google',start: new Date(y, m, 28),end: new Date(y, m, 29),url: 'http://google.com/'}\n    ];\n    // event source that calls a function on every view switch\n    $scope.eventsF = function (start, end, timezone, callback) {\n      var s = new Date(start).getTime() / 1000;\n      var e = new Date(end).getTime() / 1000;\n      var m = new Date(start).getMonth();\n      var events = [{title: 'Feed Me ' + m,start: s + (50000),end: s + (100000),allDay: false, className: ['customFeed']}];\n      callback(events);\n    };\n\n    $scope.calEventsExt = {\n       color: '#f00',\n       textColor: 'yellow',\n       events: [ \n          {type:'party',title: 'Lunch',start: new Date(y, m, d, 12, 0),end: new Date(y, m, d, 14, 0),allDay: false},\n          {type:'party',title: 'Lunch 2',start: new Date(y, m, d, 12, 0),end: new Date(y, m, d, 14, 0),allDay: false},\n          {type:'party',title: 'Click for Google',start: new Date(y, m, 28),end: new Date(y, m, 29),url: 'http://google.com/'}\n        ]\n    };\n    // alert on eventClick\n    $scope.alertOnEventClick = function( date, jsEvent, view){\n        $scope.alertMessage = (date.title + ' was clicked ');\n    };\n    //alert on Drop \n     $scope.alertOnDrop = function(event, delta, revertFunc, jsEvent, ui, view){\n       $scope.alertMessage = ('Event Droped to make dayDelta ' + delta);\n    };\n    // alert on Resize\n    $scope.alertOnResize = function(event, delta, revertFunc, jsEvent, ui, view ){\n       $scope.alertMessage = ('Event Resized to make dayDelta ' + delta);\n    };\n    //add and removes an event source of choice\n    $scope.addRemoveEventSource = function(sources,source) {\n      var canAdd = 0;\n      angular.forEach(sources,function(value, key){\n        if(sources[key] === source){\n          sources.splice(key,1);\n          canAdd = 1;\n        }\n      });\n      if(canAdd === 0){\n        sources.push(source);\n      }\n    };\n    // add custom event\n    $scope.addEvent = function() {\n      $scope.events.push({\n        title: 'Open Sesame',\n        start: new Date(y, m, 28),\n        end: new Date(y, m, 29),\n        className: ['openSesame']\n      });\n    };\n    // remove event \n    $scope.remove = function(index) {\n      $scope.events.splice(index,1);\n    };\n    //Change View\n    $scope.changeView = function(view,calendar) {\n      uiCalendarConfig.calendars[calendar].fullCalendar('changeView',view);\n    };\n    // Change View\n    $scope.renderCalender = function(calendar) {\n      if(uiCalendarConfig.calendars[calendar]){\n        uiCalendarConfig.calendars[calendar].fullCalendar('render');\n      }\n    };\n     // Render Tooltip\n    $scope.eventRender = function( event, element, view ) { \n        element.attr({'tooltip': event.title,\n                     'tooltip-append-to-body': true});\n        $compile(element)($scope);\n    };\n    // config object\n    $scope.uiConfig = {\n      calendar:{\n        height: 450,\n        editable: true,\n        header:{\n          left: 'title',\n          center: '',\n          right: 'today prev,next'\n        },\n        eventClick: $scope.alertOnEventClick,\n        eventDrop: $scope.alertOnDrop,\n        eventResize: $scope.alertOnResize,\n        eventRender: $scope.eventRender\n      }\n    };\n\n    $scope.changeLang = function() {\n      if($scope.changeTo === 'Hungarian'){\n        $scope.uiConfig.calendar.dayNames = [\"Vasárnap\", \"Hétfő\", \"Kedd\", \"Szerda\", \"Csütörtök\", \"Péntek\", \"Szombat\"];\n        $scope.uiConfig.calendar.dayNamesShort = [\"Vas\", \"Hét\", \"Kedd\", \"Sze\", \"Csüt\", \"Pén\", \"Szo\"];\n        $scope.changeTo= 'English';\n      } else {\n        $scope.uiConfig.calendar.dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        $scope.uiConfig.calendar.dayNamesShort = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        $scope.changeTo = 'Hungarian';\n      }\n    };\n    // event sources array\n    $scope.eventSources = [$scope.events, $scope.eventSource, $scope.eventsF];\n    $scope.eventSources2 = [$scope.calEventsExt, $scope.eventsF, $scope.events];\n}\n/*\n\n\n*/\n})();\n(function () {\n\n  angular\n    .module('sangRoyaleApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('sangRoyaleApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}